// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mefit.proto

package enumpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type State int32

const (
	State_DONE          State = 0
	State_NEED_PURCHASE State = 1
)

var State_name = map[int32]string{
	0: "DONE",
	1: "NEED_PURCHASE",
}
var State_value = map[string]int32{
	"DONE":          0,
	"NEED_PURCHASE": 1,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{0}
}

// Copied from google/protobuf/timestamp.proto
type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{0}
}
func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (dst *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(dst, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type AnonyReq struct {
	AnonyId              string   `protobuf:"bytes,1,opt,name=anonyId,proto3" json:"anonyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnonyReq) Reset()         { *m = AnonyReq{} }
func (m *AnonyReq) String() string { return proto.CompactTextString(m) }
func (*AnonyReq) ProtoMessage()    {}
func (*AnonyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{1}
}
func (m *AnonyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnonyReq.Unmarshal(m, b)
}
func (m *AnonyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnonyReq.Marshal(b, m, deterministic)
}
func (dst *AnonyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnonyReq.Merge(dst, src)
}
func (m *AnonyReq) XXX_Size() int {
	return xxx_messageInfo_AnonyReq.Size(m)
}
func (m *AnonyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AnonyReq.DiscardUnknown(m)
}

var xxx_messageInfo_AnonyReq proto.InternalMessageInfo

func (m *AnonyReq) GetAnonyId() string {
	if m != nil {
		return m.AnonyId
	}
	return ""
}

type AnonyRes struct {
	AnonyId              string   `protobuf:"bytes,1,opt,name=anonyId,proto3" json:"anonyId,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnonyRes) Reset()         { *m = AnonyRes{} }
func (m *AnonyRes) String() string { return proto.CompactTextString(m) }
func (*AnonyRes) ProtoMessage()    {}
func (*AnonyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{2}
}
func (m *AnonyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnonyRes.Unmarshal(m, b)
}
func (m *AnonyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnonyRes.Marshal(b, m, deterministic)
}
func (dst *AnonyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnonyRes.Merge(dst, src)
}
func (m *AnonyRes) XXX_Size() int {
	return xxx_messageInfo_AnonyRes.Size(m)
}
func (m *AnonyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AnonyRes.DiscardUnknown(m)
}

var xxx_messageInfo_AnonyRes proto.InternalMessageInfo

func (m *AnonyRes) GetAnonyId() string {
	if m != nil {
		return m.AnonyId
	}
	return ""
}

func (m *AnonyRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthReq) Reset()         { *m = AuthReq{} }
func (m *AuthReq) String() string { return proto.CompactTextString(m) }
func (*AuthReq) ProtoMessage()    {}
func (*AuthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{3}
}
func (m *AuthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthReq.Unmarshal(m, b)
}
func (m *AuthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthReq.Marshal(b, m, deterministic)
}
func (dst *AuthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthReq.Merge(dst, src)
}
func (m *AuthReq) XXX_Size() int {
	return xxx_messageInfo_AuthReq.Size(m)
}
func (m *AuthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthReq.DiscardUnknown(m)
}

var xxx_messageInfo_AuthReq proto.InternalMessageInfo

func (m *AuthReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SignUpReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	AnonyId              string   `protobuf:"bytes,3,opt,name=anonyId,proto3" json:"anonyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUpReq) Reset()         { *m = SignUpReq{} }
func (m *SignUpReq) String() string { return proto.CompactTextString(m) }
func (*SignUpReq) ProtoMessage()    {}
func (*SignUpReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{4}
}
func (m *SignUpReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpReq.Unmarshal(m, b)
}
func (m *SignUpReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpReq.Marshal(b, m, deterministic)
}
func (dst *SignUpReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpReq.Merge(dst, src)
}
func (m *SignUpReq) XXX_Size() int {
	return xxx_messageInfo_SignUpReq.Size(m)
}
func (m *SignUpReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpReq proto.InternalMessageInfo

func (m *SignUpReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignUpReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SignUpReq) GetAnonyId() string {
	if m != nil {
		return m.AnonyId
	}
	return ""
}

type EmailReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailReq) Reset()         { *m = EmailReq{} }
func (m *EmailReq) String() string { return proto.CompactTextString(m) }
func (*EmailReq) ProtoMessage()    {}
func (*EmailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{5}
}
func (m *EmailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailReq.Unmarshal(m, b)
}
func (m *EmailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailReq.Marshal(b, m, deterministic)
}
func (dst *EmailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailReq.Merge(dst, src)
}
func (m *EmailReq) XXX_Size() int {
	return xxx_messageInfo_EmailReq.Size(m)
}
func (m *EmailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmailReq proto.InternalMessageInfo

func (m *EmailReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type SignInRes struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInRes) Reset()         { *m = SignInRes{} }
func (m *SignInRes) String() string { return proto.CompactTextString(m) }
func (*SignInRes) ProtoMessage()    {}
func (*SignInRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{6}
}
func (m *SignInRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInRes.Unmarshal(m, b)
}
func (m *SignInRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInRes.Marshal(b, m, deterministic)
}
func (dst *SignInRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInRes.Merge(dst, src)
}
func (m *SignInRes) XXX_Size() int {
	return xxx_messageInfo_SignInRes.Size(m)
}
func (m *SignInRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInRes.DiscardUnknown(m)
}

var xxx_messageInfo_SignInRes proto.InternalMessageInfo

func (m *SignInRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutReq) Reset()         { *m = LogoutReq{} }
func (m *LogoutReq) String() string { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()    {}
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{7}
}
func (m *LogoutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutReq.Unmarshal(m, b)
}
func (m *LogoutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutReq.Marshal(b, m, deterministic)
}
func (dst *LogoutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutReq.Merge(dst, src)
}
func (m *LogoutReq) XXX_Size() int {
	return xxx_messageInfo_LogoutReq.Size(m)
}
func (m *LogoutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutReq.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutReq proto.InternalMessageInfo

func (m *LogoutReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// This is the model that i created, Add ur changes!
type Profile struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Gender ranges from 1 to 3
	// 1: Male
	// 2: Female
	// 3: Others
	Gender        uint32  `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Age           uint32  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Height        uint32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Waist         uint32  `protobuf:"varint,5,opt,name=waist,proto3" json:"waist,omitempty"`
	Neck          uint32  `protobuf:"varint,6,opt,name=neck,proto3" json:"neck,omitempty"`
	Hip           uint32  `protobuf:"varint,7,opt,name=hip,proto3" json:"hip,omitempty"`
	Arm           uint32  `protobuf:"varint,8,opt,name=arm,proto3" json:"arm,omitempty"`
	Leg           uint32  `protobuf:"varint,9,opt,name=leg,proto3" json:"leg,omitempty"`
	CurrentWeight float32 `protobuf:"fixed32,10,opt,name=currentWeight,proto3" json:"currentWeight,omitempty"`
	TargetWeight  float32 `protobuf:"fixed32,11,opt,name=targetWeight,proto3" json:"targetWeight,omitempty"`
	// Activity level ranges from 1 to 5
	// 1: Rarely
	// 2: Light: 1-3 times a week
	// 3: Moderate: 3-5 times a week
	// 4: Heavy: 6-7 times a week
	// 5: Elite: Several times per day
	ActivityLevel uint32 `protobuf:"varint,12,opt,name=activityLevel,proto3" json:"activityLevel,omitempty"`
	// Days of week that user working out
	DaysOfWeek []uint32 `protobuf:"varint,13,rep,packed,name=daysOfWeek,proto3" json:"daysOfWeek,omitempty"`
	// Goal ranges from 1 to 3
	// 1: Lose fat
	// 2: Get fitter/Maintain
	// 3: Gain muscle
	Goal                 uint32   `protobuf:"varint,14,opt,name=goal,proto3" json:"goal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{8}
}
func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (dst *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(dst, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetGender() uint32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *Profile) GetAge() uint32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Profile) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Profile) GetWaist() uint32 {
	if m != nil {
		return m.Waist
	}
	return 0
}

func (m *Profile) GetNeck() uint32 {
	if m != nil {
		return m.Neck
	}
	return 0
}

func (m *Profile) GetHip() uint32 {
	if m != nil {
		return m.Hip
	}
	return 0
}

func (m *Profile) GetArm() uint32 {
	if m != nil {
		return m.Arm
	}
	return 0
}

func (m *Profile) GetLeg() uint32 {
	if m != nil {
		return m.Leg
	}
	return 0
}

func (m *Profile) GetCurrentWeight() float32 {
	if m != nil {
		return m.CurrentWeight
	}
	return 0
}

func (m *Profile) GetTargetWeight() float32 {
	if m != nil {
		return m.TargetWeight
	}
	return 0
}

func (m *Profile) GetActivityLevel() uint32 {
	if m != nil {
		return m.ActivityLevel
	}
	return 0
}

func (m *Profile) GetDaysOfWeek() []uint32 {
	if m != nil {
		return m.DaysOfWeek
	}
	return nil
}

func (m *Profile) GetGoal() uint32 {
	if m != nil {
		return m.Goal
	}
	return 0
}

type Movement struct {
	Name         string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ThumbnailUrl string `protobuf:"bytes,2,opt,name=ThumbnailUrl,proto3" json:"ThumbnailUrl,omitempty"`
	// Names of muscles that involved in the movement
	MuscleGroups []*MuscleGroup `protobuf:"bytes,3,rep,name=MuscleGroups,proto3" json:"MuscleGroups,omitempty"`
	// Description for movement
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	// Instruction on how to do the movement
	Instruction          string     `protobuf:"bytes,5,opt,name=Instruction,proto3" json:"Instruction,omitempty"`
	VideoUrl             string     `protobuf:"bytes,6,opt,name=VideoUrl,proto3" json:"VideoUrl,omitempty"`
	Tips                 string     `protobuf:"bytes,7,opt,name=Tips,proto3" json:"Tips,omitempty"`
	Articles             []*Article `protobuf:"bytes,8,rep,name=Articles,proto3" json:"Articles,omitempty"`
	Keywords             []*Keyword `protobuf:"bytes,9,rep,name=Keywords,proto3" json:"Keywords,omitempty"`
	Id                   uint32     `protobuf:"varint,10,opt,name=Id,proto3" json:"Id,omitempty"`
	NameFa               string     `protobuf:"bytes,11,opt,name=nameFa,proto3" json:"nameFa,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Movement) Reset()         { *m = Movement{} }
func (m *Movement) String() string { return proto.CompactTextString(m) }
func (*Movement) ProtoMessage()    {}
func (*Movement) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{9}
}
func (m *Movement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movement.Unmarshal(m, b)
}
func (m *Movement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movement.Marshal(b, m, deterministic)
}
func (dst *Movement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movement.Merge(dst, src)
}
func (m *Movement) XXX_Size() int {
	return xxx_messageInfo_Movement.Size(m)
}
func (m *Movement) XXX_DiscardUnknown() {
	xxx_messageInfo_Movement.DiscardUnknown(m)
}

var xxx_messageInfo_Movement proto.InternalMessageInfo

func (m *Movement) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Movement) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *Movement) GetMuscleGroups() []*MuscleGroup {
	if m != nil {
		return m.MuscleGroups
	}
	return nil
}

func (m *Movement) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Movement) GetInstruction() string {
	if m != nil {
		return m.Instruction
	}
	return ""
}

func (m *Movement) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *Movement) GetTips() string {
	if m != nil {
		return m.Tips
	}
	return ""
}

func (m *Movement) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

func (m *Movement) GetKeywords() []*Keyword {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *Movement) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Movement) GetNameFa() string {
	if m != nil {
		return m.NameFa
	}
	return ""
}

// Class
type MuscleGroup struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MuscleGroup) Reset()         { *m = MuscleGroup{} }
func (m *MuscleGroup) String() string { return proto.CompactTextString(m) }
func (*MuscleGroup) ProtoMessage()    {}
func (*MuscleGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{10}
}
func (m *MuscleGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MuscleGroup.Unmarshal(m, b)
}
func (m *MuscleGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MuscleGroup.Marshal(b, m, deterministic)
}
func (dst *MuscleGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MuscleGroup.Merge(dst, src)
}
func (m *MuscleGroup) XXX_Size() int {
	return xxx_messageInfo_MuscleGroup.Size(m)
}
func (m *MuscleGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MuscleGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MuscleGroup proto.InternalMessageInfo

func (m *MuscleGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Class struct {
	Name                 string         `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	CoverUrl             string         `protobuf:"bytes,2,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	Description          string         `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Keywords             []*Keyword     `protobuf:"bytes,4,rep,name=Keywords,proto3" json:"Keywords,omitempty"`
	MuscleGroups         []*MuscleGroup `protobuf:"bytes,5,rep,name=MuscleGroups,proto3" json:"MuscleGroups,omitempty"`
	Id                   uint32         `protobuf:"varint,6,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Class) Reset()         { *m = Class{} }
func (m *Class) String() string { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()    {}
func (*Class) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{11}
}
func (m *Class) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Class.Unmarshal(m, b)
}
func (m *Class) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Class.Marshal(b, m, deterministic)
}
func (dst *Class) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Class.Merge(dst, src)
}
func (m *Class) XXX_Size() int {
	return xxx_messageInfo_Class.Size(m)
}
func (m *Class) XXX_DiscardUnknown() {
	xxx_messageInfo_Class.DiscardUnknown(m)
}

var xxx_messageInfo_Class proto.InternalMessageInfo

func (m *Class) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Class) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *Class) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Class) GetKeywords() []*Keyword {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *Class) GetMuscleGroups() []*MuscleGroup {
	if m != nil {
		return m.MuscleGroups
	}
	return nil
}

func (m *Class) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListClassRes struct {
	Classes              []*Class `protobuf:"bytes,1,rep,name=Classes,proto3" json:"Classes,omitempty"`
	Page                 uint32   `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClassRes) Reset()         { *m = ListClassRes{} }
func (m *ListClassRes) String() string { return proto.CompactTextString(m) }
func (*ListClassRes) ProtoMessage()    {}
func (*ListClassRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{12}
}
func (m *ListClassRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClassRes.Unmarshal(m, b)
}
func (m *ListClassRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClassRes.Marshal(b, m, deterministic)
}
func (dst *ListClassRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClassRes.Merge(dst, src)
}
func (m *ListClassRes) XXX_Size() int {
	return xxx_messageInfo_ListClassRes.Size(m)
}
func (m *ListClassRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClassRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListClassRes proto.InternalMessageInfo

func (m *ListClassRes) GetClasses() []*Class {
	if m != nil {
		return m.Classes
	}
	return nil
}

func (m *ListClassRes) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

// Listing movements for some class
type FindByIdReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIdReq) Reset()         { *m = FindByIdReq{} }
func (m *FindByIdReq) String() string { return proto.CompactTextString(m) }
func (*FindByIdReq) ProtoMessage()    {}
func (*FindByIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{13}
}
func (m *FindByIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIdReq.Unmarshal(m, b)
}
func (m *FindByIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIdReq.Marshal(b, m, deterministic)
}
func (dst *FindByIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIdReq.Merge(dst, src)
}
func (m *FindByIdReq) XXX_Size() int {
	return xxx_messageInfo_FindByIdReq.Size(m)
}
func (m *FindByIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIdReq proto.InternalMessageInfo

func (m *FindByIdReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindByMongoIdReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByMongoIdReq) Reset()         { *m = FindByMongoIdReq{} }
func (m *FindByMongoIdReq) String() string { return proto.CompactTextString(m) }
func (*FindByMongoIdReq) ProtoMessage()    {}
func (*FindByMongoIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{14}
}
func (m *FindByMongoIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByMongoIdReq.Unmarshal(m, b)
}
func (m *FindByMongoIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByMongoIdReq.Marshal(b, m, deterministic)
}
func (dst *FindByMongoIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByMongoIdReq.Merge(dst, src)
}
func (m *FindByMongoIdReq) XXX_Size() int {
	return xxx_messageInfo_FindByMongoIdReq.Size(m)
}
func (m *FindByMongoIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByMongoIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindByMongoIdReq proto.InternalMessageInfo

func (m *FindByMongoIdReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Listing movements for some class
type FeedbackReq struct {
	Id   uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Rate uint32 `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
	// Difficulty ranges from 1 to 3
	Difficulty           uint32   `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedbackReq) Reset()         { *m = FeedbackReq{} }
func (m *FeedbackReq) String() string { return proto.CompactTextString(m) }
func (*FeedbackReq) ProtoMessage()    {}
func (*FeedbackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{15}
}
func (m *FeedbackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedbackReq.Unmarshal(m, b)
}
func (m *FeedbackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedbackReq.Marshal(b, m, deterministic)
}
func (dst *FeedbackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedbackReq.Merge(dst, src)
}
func (m *FeedbackReq) XXX_Size() int {
	return xxx_messageInfo_FeedbackReq.Size(m)
}
func (m *FeedbackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedbackReq.DiscardUnknown(m)
}

var xxx_messageInfo_FeedbackReq proto.InternalMessageInfo

func (m *FeedbackReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FeedbackReq) GetRate() uint32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *FeedbackReq) GetDifficulty() uint32 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

// listing the movements in responde to a class
type ListMovementsRes struct {
	Movements            []*Movement `protobuf:"bytes,1,rep,name=Movements,proto3" json:"Movements,omitempty"`
	Page                 uint32      `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	TotalCount           int32       `protobuf:"varint,3,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListMovementsRes) Reset()         { *m = ListMovementsRes{} }
func (m *ListMovementsRes) String() string { return proto.CompactTextString(m) }
func (*ListMovementsRes) ProtoMessage()    {}
func (*ListMovementsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{16}
}
func (m *ListMovementsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMovementsRes.Unmarshal(m, b)
}
func (m *ListMovementsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMovementsRes.Marshal(b, m, deterministic)
}
func (dst *ListMovementsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMovementsRes.Merge(dst, src)
}
func (m *ListMovementsRes) XXX_Size() int {
	return xxx_messageInfo_ListMovementsRes.Size(m)
}
func (m *ListMovementsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMovementsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListMovementsRes proto.InternalMessageInfo

func (m *ListMovementsRes) GetMovements() []*Movement {
	if m != nil {
		return m.Movements
	}
	return nil
}

func (m *ListMovementsRes) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListMovementsRes) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type ExerciseSection struct {
	Exercises            []*ExercisePeriod `protobuf:"bytes,1,rep,name=Exercises,proto3" json:"Exercises,omitempty"`
	Round                uint32            `protobuf:"varint,2,opt,name=Round,proto3" json:"Round,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExerciseSection) Reset()         { *m = ExerciseSection{} }
func (m *ExerciseSection) String() string { return proto.CompactTextString(m) }
func (*ExerciseSection) ProtoMessage()    {}
func (*ExerciseSection) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{17}
}
func (m *ExerciseSection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExerciseSection.Unmarshal(m, b)
}
func (m *ExerciseSection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExerciseSection.Marshal(b, m, deterministic)
}
func (dst *ExerciseSection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExerciseSection.Merge(dst, src)
}
func (m *ExerciseSection) XXX_Size() int {
	return xxx_messageInfo_ExerciseSection.Size(m)
}
func (m *ExerciseSection) XXX_DiscardUnknown() {
	xxx_messageInfo_ExerciseSection.DiscardUnknown(m)
}

var xxx_messageInfo_ExerciseSection proto.InternalMessageInfo

func (m *ExerciseSection) GetExercises() []*ExercisePeriod {
	if m != nil {
		return m.Exercises
	}
	return nil
}

func (m *ExerciseSection) GetRound() uint32 {
	if m != nil {
		return m.Round
	}
	return 0
}

type ExercisePeriod struct {
	Name         string    `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ThumbnailUrl string    `protobuf:"bytes,2,opt,name=ThumbnailUrl,proto3" json:"ThumbnailUrl,omitempty"`
	MovementId   uint32    `protobuf:"varint,3,opt,name=MovementId,proto3" json:"MovementId,omitempty"`
	Movement     *Movement `protobuf:"bytes,4,opt,name=Movement,proto3" json:"Movement,omitempty"`
	// type time(1) or repitation (2);
	ExerciseType uint32 `protobuf:"varint,5,opt,name=ExerciseType,proto3" json:"ExerciseType,omitempty"`
	// value is second for time, or count for rep. e.g. 10x pushups, 120 sec of running
	Value                uint32   `protobuf:"varint,6,opt,name=Value,proto3" json:"Value,omitempty"`
	Rest                 int32    `protobuf:"varint,7,opt,name=Rest,proto3" json:"Rest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExercisePeriod) Reset()         { *m = ExercisePeriod{} }
func (m *ExercisePeriod) String() string { return proto.CompactTextString(m) }
func (*ExercisePeriod) ProtoMessage()    {}
func (*ExercisePeriod) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{18}
}
func (m *ExercisePeriod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExercisePeriod.Unmarshal(m, b)
}
func (m *ExercisePeriod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExercisePeriod.Marshal(b, m, deterministic)
}
func (dst *ExercisePeriod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExercisePeriod.Merge(dst, src)
}
func (m *ExercisePeriod) XXX_Size() int {
	return xxx_messageInfo_ExercisePeriod.Size(m)
}
func (m *ExercisePeriod) XXX_DiscardUnknown() {
	xxx_messageInfo_ExercisePeriod.DiscardUnknown(m)
}

var xxx_messageInfo_ExercisePeriod proto.InternalMessageInfo

func (m *ExercisePeriod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExercisePeriod) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *ExercisePeriod) GetMovementId() uint32 {
	if m != nil {
		return m.MovementId
	}
	return 0
}

func (m *ExercisePeriod) GetMovement() *Movement {
	if m != nil {
		return m.Movement
	}
	return nil
}

func (m *ExercisePeriod) GetExerciseType() uint32 {
	if m != nil {
		return m.ExerciseType
	}
	return 0
}

func (m *ExercisePeriod) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ExercisePeriod) GetRest() int32 {
	if m != nil {
		return m.Rest
	}
	return 0
}

// respose to the workout
type CurrentPlanRes struct {
	Workout              *Workout `protobuf:"bytes,1,opt,name=workout,proto3" json:"workout,omitempty"`
	Plan                 *PlanRes `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	TotalWorkouts        uint32   `protobuf:"varint,3,opt,name=totalWorkouts,proto3" json:"totalWorkouts,omitempty"`
	CompletedWorkouts    uint32   `protobuf:"varint,4,opt,name=completedWorkouts,proto3" json:"completedWorkouts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentPlanRes) Reset()         { *m = CurrentPlanRes{} }
func (m *CurrentPlanRes) String() string { return proto.CompactTextString(m) }
func (*CurrentPlanRes) ProtoMessage()    {}
func (*CurrentPlanRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{19}
}
func (m *CurrentPlanRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentPlanRes.Unmarshal(m, b)
}
func (m *CurrentPlanRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentPlanRes.Marshal(b, m, deterministic)
}
func (dst *CurrentPlanRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentPlanRes.Merge(dst, src)
}
func (m *CurrentPlanRes) XXX_Size() int {
	return xxx_messageInfo_CurrentPlanRes.Size(m)
}
func (m *CurrentPlanRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentPlanRes.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentPlanRes proto.InternalMessageInfo

func (m *CurrentPlanRes) GetWorkout() *Workout {
	if m != nil {
		return m.Workout
	}
	return nil
}

func (m *CurrentPlanRes) GetPlan() *PlanRes {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *CurrentPlanRes) GetTotalWorkouts() uint32 {
	if m != nil {
		return m.TotalWorkouts
	}
	return 0
}

func (m *CurrentPlanRes) GetCompletedWorkouts() uint32 {
	if m != nil {
		return m.CompletedWorkouts
	}
	return 0
}

// respose to the workout
type Workout struct {
	Id          uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Instruction string `protobuf:"bytes,4,opt,name=Instruction,proto3" json:"Instruction,omitempty"`
	// Workout period e.g. exercise, rest period
	Calorie              uint32             `protobuf:"varint,5,opt,name=Calorie,proto3" json:"Calorie,omitempty"`
	Duration             uint32             `protobuf:"varint,6,opt,name=Duration,proto3" json:"Duration,omitempty"`
	ExerciseSections     []*ExerciseSection `protobuf:"bytes,7,rep,name=exerciseSections,proto3" json:"exerciseSections,omitempty"`
	Viplock              bool               `protobuf:"varint,8,opt,name=viplock,proto3" json:"viplock,omitempty"`
	ThumbnailUrl         string             `protobuf:"bytes,9,opt,name=ThumbnailUrl,proto3" json:"ThumbnailUrl,omitempty"`
	CoverUrl             string             `protobuf:"bytes,10,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Workout) Reset()         { *m = Workout{} }
func (m *Workout) String() string { return proto.CompactTextString(m) }
func (*Workout) ProtoMessage()    {}
func (*Workout) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{20}
}
func (m *Workout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workout.Unmarshal(m, b)
}
func (m *Workout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workout.Marshal(b, m, deterministic)
}
func (dst *Workout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workout.Merge(dst, src)
}
func (m *Workout) XXX_Size() int {
	return xxx_messageInfo_Workout.Size(m)
}
func (m *Workout) XXX_DiscardUnknown() {
	xxx_messageInfo_Workout.DiscardUnknown(m)
}

var xxx_messageInfo_Workout proto.InternalMessageInfo

func (m *Workout) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Workout) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Workout) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Workout) GetInstruction() string {
	if m != nil {
		return m.Instruction
	}
	return ""
}

func (m *Workout) GetCalorie() uint32 {
	if m != nil {
		return m.Calorie
	}
	return 0
}

func (m *Workout) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Workout) GetExerciseSections() []*ExerciseSection {
	if m != nil {
		return m.ExerciseSections
	}
	return nil
}

func (m *Workout) GetViplock() bool {
	if m != nil {
		return m.Viplock
	}
	return false
}

func (m *Workout) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *Workout) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

type WorkoutList struct {
	Title                string     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Workouts             []*Workout `protobuf:"bytes,2,rep,name=workouts,proto3" json:"workouts,omitempty"`
	Count                int32      `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Page                 int32      `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WorkoutList) Reset()         { *m = WorkoutList{} }
func (m *WorkoutList) String() string { return proto.CompactTextString(m) }
func (*WorkoutList) ProtoMessage()    {}
func (*WorkoutList) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{21}
}
func (m *WorkoutList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkoutList.Unmarshal(m, b)
}
func (m *WorkoutList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkoutList.Marshal(b, m, deterministic)
}
func (dst *WorkoutList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkoutList.Merge(dst, src)
}
func (m *WorkoutList) XXX_Size() int {
	return xxx_messageInfo_WorkoutList.Size(m)
}
func (m *WorkoutList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkoutList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkoutList proto.InternalMessageInfo

func (m *WorkoutList) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *WorkoutList) GetWorkouts() []*Workout {
	if m != nil {
		return m.Workouts
	}
	return nil
}

func (m *WorkoutList) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *WorkoutList) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

//
type JoinPlanReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinPlanReq) Reset()         { *m = JoinPlanReq{} }
func (m *JoinPlanReq) String() string { return proto.CompactTextString(m) }
func (*JoinPlanReq) ProtoMessage()    {}
func (*JoinPlanReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{22}
}
func (m *JoinPlanReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinPlanReq.Unmarshal(m, b)
}
func (m *JoinPlanReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinPlanReq.Marshal(b, m, deterministic)
}
func (dst *JoinPlanReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinPlanReq.Merge(dst, src)
}
func (m *JoinPlanReq) XXX_Size() int {
	return xxx_messageInfo_JoinPlanReq.Size(m)
}
func (m *JoinPlanReq) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinPlanReq.DiscardUnknown(m)
}

var xxx_messageInfo_JoinPlanReq proto.InternalMessageInfo

func (m *JoinPlanReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

//
type JoinPlanRes struct {
	State                State    `protobuf:"varint,1,opt,name=state,proto3,enum=State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinPlanRes) Reset()         { *m = JoinPlanRes{} }
func (m *JoinPlanRes) String() string { return proto.CompactTextString(m) }
func (*JoinPlanRes) ProtoMessage()    {}
func (*JoinPlanRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{23}
}
func (m *JoinPlanRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinPlanRes.Unmarshal(m, b)
}
func (m *JoinPlanRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinPlanRes.Marshal(b, m, deterministic)
}
func (dst *JoinPlanRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinPlanRes.Merge(dst, src)
}
func (m *JoinPlanRes) XXX_Size() int {
	return xxx_messageInfo_JoinPlanRes.Size(m)
}
func (m *JoinPlanRes) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinPlanRes.DiscardUnknown(m)
}

var xxx_messageInfo_JoinPlanRes proto.InternalMessageInfo

func (m *JoinPlanRes) GetState() State {
	if m != nil {
		return m.State
	}
	return State_DONE
}

// response to a plan selection
type PlanRes struct {
	ThumbnailUrl string `protobuf:"bytes,1,opt,name=ThumbnailUrl,proto3" json:"ThumbnailUrl,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Id           uint32 `protobuf:"varint,4,opt,name=Id,proto3" json:"Id,omitempty"`
	// how many wourkouts is in plan
	WorkoutCounts uint32 `protobuf:"varint,5,opt,name=WorkoutCounts,proto3" json:"WorkoutCounts,omitempty"`
	// how many weeks it takes
	Weeks uint32 `protobuf:"varint,6,opt,name=Weeks,proto3" json:"Weeks,omitempty"`
	// what level it is
	Level uint32 `protobuf:"varint,7,opt,name=Level,proto3" json:"Level,omitempty"`
	// requirements e.g. some gym tools
	// repeated string requirements = 8;
	VipLock              bool     `protobuf:"varint,8,opt,name=VipLock,proto3" json:"VipLock,omitempty"`
	HasTrial             bool     `protobuf:"varint,9,opt,name=HasTrial,proto3" json:"HasTrial,omitempty"`
	TotalCalorie         uint32   `protobuf:"varint,10,opt,name=TotalCalorie,proto3" json:"TotalCalorie,omitempty"`
	CoverUrl             string   `protobuf:"bytes,11,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlanRes) Reset()         { *m = PlanRes{} }
func (m *PlanRes) String() string { return proto.CompactTextString(m) }
func (*PlanRes) ProtoMessage()    {}
func (*PlanRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{24}
}
func (m *PlanRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanRes.Unmarshal(m, b)
}
func (m *PlanRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanRes.Marshal(b, m, deterministic)
}
func (dst *PlanRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanRes.Merge(dst, src)
}
func (m *PlanRes) XXX_Size() int {
	return xxx_messageInfo_PlanRes.Size(m)
}
func (m *PlanRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanRes.DiscardUnknown(m)
}

var xxx_messageInfo_PlanRes proto.InternalMessageInfo

func (m *PlanRes) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *PlanRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlanRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PlanRes) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlanRes) GetWorkoutCounts() uint32 {
	if m != nil {
		return m.WorkoutCounts
	}
	return 0
}

func (m *PlanRes) GetWeeks() uint32 {
	if m != nil {
		return m.Weeks
	}
	return 0
}

func (m *PlanRes) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *PlanRes) GetVipLock() bool {
	if m != nil {
		return m.VipLock
	}
	return false
}

func (m *PlanRes) GetHasTrial() bool {
	if m != nil {
		return m.HasTrial
	}
	return false
}

func (m *PlanRes) GetTotalCalorie() uint32 {
	if m != nil {
		return m.TotalCalorie
	}
	return 0
}

func (m *PlanRes) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

type PayReq struct {
	ProductID            int32    `protobuf:"varint,1,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	IsBazaar             bool     `protobuf:"varint,2,opt,name=IsBazaar,proto3" json:"IsBazaar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayReq) Reset()         { *m = PayReq{} }
func (m *PayReq) String() string { return proto.CompactTextString(m) }
func (*PayReq) ProtoMessage()    {}
func (*PayReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{25}
}
func (m *PayReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayReq.Unmarshal(m, b)
}
func (m *PayReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayReq.Marshal(b, m, deterministic)
}
func (dst *PayReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayReq.Merge(dst, src)
}
func (m *PayReq) XXX_Size() int {
	return xxx_messageInfo_PayReq.Size(m)
}
func (m *PayReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PayReq.DiscardUnknown(m)
}

var xxx_messageInfo_PayReq proto.InternalMessageInfo

func (m *PayReq) GetProductID() int32 {
	if m != nil {
		return m.ProductID
	}
	return 0
}

func (m *PayReq) GetIsBazaar() bool {
	if m != nil {
		return m.IsBazaar
	}
	return false
}

type ZarinPayload struct {
	TransactionId        int32    `protobuf:"varint,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	Uri                  string   `protobuf:"bytes,2,opt,name=Uri,proto3" json:"Uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZarinPayload) Reset()         { *m = ZarinPayload{} }
func (m *ZarinPayload) String() string { return proto.CompactTextString(m) }
func (*ZarinPayload) ProtoMessage()    {}
func (*ZarinPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{26}
}
func (m *ZarinPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZarinPayload.Unmarshal(m, b)
}
func (m *ZarinPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZarinPayload.Marshal(b, m, deterministic)
}
func (dst *ZarinPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZarinPayload.Merge(dst, src)
}
func (m *ZarinPayload) XXX_Size() int {
	return xxx_messageInfo_ZarinPayload.Size(m)
}
func (m *ZarinPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ZarinPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ZarinPayload proto.InternalMessageInfo

func (m *ZarinPayload) GetTransactionId() int32 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

func (m *ZarinPayload) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type BazaarPayload struct {
	RSA                  string   `protobuf:"bytes,1,opt,name=RSA,proto3" json:"RSA,omitempty"`
	SKU                  string   `protobuf:"bytes,2,opt,name=SKU,proto3" json:"SKU,omitempty"`
	DevPayload           string   `protobuf:"bytes,3,opt,name=DevPayload,proto3" json:"DevPayload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BazaarPayload) Reset()         { *m = BazaarPayload{} }
func (m *BazaarPayload) String() string { return proto.CompactTextString(m) }
func (*BazaarPayload) ProtoMessage()    {}
func (*BazaarPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{27}
}
func (m *BazaarPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BazaarPayload.Unmarshal(m, b)
}
func (m *BazaarPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BazaarPayload.Marshal(b, m, deterministic)
}
func (dst *BazaarPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BazaarPayload.Merge(dst, src)
}
func (m *BazaarPayload) XXX_Size() int {
	return xxx_messageInfo_BazaarPayload.Size(m)
}
func (m *BazaarPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_BazaarPayload.DiscardUnknown(m)
}

var xxx_messageInfo_BazaarPayload proto.InternalMessageInfo

func (m *BazaarPayload) GetRSA() string {
	if m != nil {
		return m.RSA
	}
	return ""
}

func (m *BazaarPayload) GetSKU() string {
	if m != nil {
		return m.SKU
	}
	return ""
}

func (m *BazaarPayload) GetDevPayload() string {
	if m != nil {
		return m.DevPayload
	}
	return ""
}

type PayRes struct {
	// Types that are valid to be assigned to Type:
	//	*PayRes_Zarin
	//	*PayRes_Bazaar
	//	*PayRes_Paid
	Type                 isPayRes_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PayRes) Reset()         { *m = PayRes{} }
func (m *PayRes) String() string { return proto.CompactTextString(m) }
func (*PayRes) ProtoMessage()    {}
func (*PayRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{28}
}
func (m *PayRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayRes.Unmarshal(m, b)
}
func (m *PayRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayRes.Marshal(b, m, deterministic)
}
func (dst *PayRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayRes.Merge(dst, src)
}
func (m *PayRes) XXX_Size() int {
	return xxx_messageInfo_PayRes.Size(m)
}
func (m *PayRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PayRes.DiscardUnknown(m)
}

var xxx_messageInfo_PayRes proto.InternalMessageInfo

type isPayRes_Type interface {
	isPayRes_Type()
}

type PayRes_Zarin struct {
	Zarin *ZarinPayload `protobuf:"bytes,1,opt,name=Zarin,proto3,oneof"`
}

type PayRes_Bazaar struct {
	Bazaar *BazaarPayload `protobuf:"bytes,2,opt,name=Bazaar,proto3,oneof"`
}

type PayRes_Paid struct {
	Paid bool `protobuf:"varint,3,opt,name=Paid,proto3,oneof"`
}

func (*PayRes_Zarin) isPayRes_Type() {}

func (*PayRes_Bazaar) isPayRes_Type() {}

func (*PayRes_Paid) isPayRes_Type() {}

func (m *PayRes) GetType() isPayRes_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PayRes) GetZarin() *ZarinPayload {
	if x, ok := m.GetType().(*PayRes_Zarin); ok {
		return x.Zarin
	}
	return nil
}

func (m *PayRes) GetBazaar() *BazaarPayload {
	if x, ok := m.GetType().(*PayRes_Bazaar); ok {
		return x.Bazaar
	}
	return nil
}

func (m *PayRes) GetPaid() bool {
	if x, ok := m.GetType().(*PayRes_Paid); ok {
		return x.Paid
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PayRes) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PayRes_OneofMarshaler, _PayRes_OneofUnmarshaler, _PayRes_OneofSizer, []interface{}{
		(*PayRes_Zarin)(nil),
		(*PayRes_Bazaar)(nil),
		(*PayRes_Paid)(nil),
	}
}

func _PayRes_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PayRes)
	// type
	switch x := m.Type.(type) {
	case *PayRes_Zarin:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Zarin); err != nil {
			return err
		}
	case *PayRes_Bazaar:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Bazaar); err != nil {
			return err
		}
	case *PayRes_Paid:
		t := uint64(0)
		if x.Paid {
			t = 1
		}
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("PayRes.Type has unexpected type %T", x)
	}
	return nil
}

func _PayRes_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PayRes)
	switch tag {
	case 1: // type.Zarin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZarinPayload)
		err := b.DecodeMessage(msg)
		m.Type = &PayRes_Zarin{msg}
		return true, err
	case 2: // type.Bazaar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BazaarPayload)
		err := b.DecodeMessage(msg)
		m.Type = &PayRes_Bazaar{msg}
		return true, err
	case 3: // type.Paid
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &PayRes_Paid{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _PayRes_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PayRes)
	// type
	switch x := m.Type.(type) {
	case *PayRes_Zarin:
		s := proto.Size(x.Zarin)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PayRes_Bazaar:
		s := proto.Size(x.Bazaar)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PayRes_Paid:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Product struct {
	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Price       int32  `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Off         int32  `protobuf:"varint,5,opt,name=Off,proto3" json:"Off,omitempty"`
	// to be used if the product was a special product
	Label                string   `protobuf:"bytes,6,opt,name=Label,proto3" json:"Label,omitempty"`
	Recommended          bool     `protobuf:"varint,7,opt,name=recommended,proto3" json:"recommended,omitempty"`
	CoverUrl             string   `protobuf:"bytes,8,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{29}
}
func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (dst *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(dst, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetOff() int32 {
	if m != nil {
		return m.Off
	}
	return 0
}

func (m *Product) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Product) GetRecommended() bool {
	if m != nil {
		return m.Recommended
	}
	return false
}

func (m *Product) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

type ProductRes struct {
	Products             []*Product `protobuf:"bytes,1,rep,name=Products,proto3" json:"Products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProductRes) Reset()         { *m = ProductRes{} }
func (m *ProductRes) String() string { return proto.CompactTextString(m) }
func (*ProductRes) ProtoMessage()    {}
func (*ProductRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{30}
}
func (m *ProductRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRes.Unmarshal(m, b)
}
func (m *ProductRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRes.Marshal(b, m, deterministic)
}
func (dst *ProductRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRes.Merge(dst, src)
}
func (m *ProductRes) XXX_Size() int {
	return xxx_messageInfo_ProductRes.Size(m)
}
func (m *ProductRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRes.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRes proto.InternalMessageInfo

func (m *ProductRes) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type BazaarReq struct {
	PackageName          string   `protobuf:"bytes,1,opt,name=PackageName,proto3" json:"PackageName,omitempty"`
	ProductID            string   `protobuf:"bytes,2,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	PurchaseID           string   `protobuf:"bytes,3,opt,name=PurchaseID,proto3" json:"PurchaseID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BazaarReq) Reset()         { *m = BazaarReq{} }
func (m *BazaarReq) String() string { return proto.CompactTextString(m) }
func (*BazaarReq) ProtoMessage()    {}
func (*BazaarReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{31}
}
func (m *BazaarReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BazaarReq.Unmarshal(m, b)
}
func (m *BazaarReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BazaarReq.Marshal(b, m, deterministic)
}
func (dst *BazaarReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BazaarReq.Merge(dst, src)
}
func (m *BazaarReq) XXX_Size() int {
	return xxx_messageInfo_BazaarReq.Size(m)
}
func (m *BazaarReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BazaarReq.DiscardUnknown(m)
}

var xxx_messageInfo_BazaarReq proto.InternalMessageInfo

func (m *BazaarReq) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *BazaarReq) GetProductID() string {
	if m != nil {
		return m.ProductID
	}
	return ""
}

func (m *BazaarReq) GetPurchaseID() string {
	if m != nil {
		return m.PurchaseID
	}
	return ""
}

type BazaarRes struct {
	Paid                 bool     `protobuf:"varint,1,opt,name=Paid,proto3" json:"Paid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BazaarRes) Reset()         { *m = BazaarRes{} }
func (m *BazaarRes) String() string { return proto.CompactTextString(m) }
func (*BazaarRes) ProtoMessage()    {}
func (*BazaarRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{32}
}
func (m *BazaarRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BazaarRes.Unmarshal(m, b)
}
func (m *BazaarRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BazaarRes.Marshal(b, m, deterministic)
}
func (dst *BazaarRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BazaarRes.Merge(dst, src)
}
func (m *BazaarRes) XXX_Size() int {
	return xxx_messageInfo_BazaarRes.Size(m)
}
func (m *BazaarRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BazaarRes.DiscardUnknown(m)
}

var xxx_messageInfo_BazaarRes proto.InternalMessageInfo

func (m *BazaarRes) GetPaid() bool {
	if m != nil {
		return m.Paid
	}
	return false
}

type PaymentRes struct {
	UserID     int32  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Authority  int32  `protobuf:"varint,2,opt,name=Authority,proto3" json:"Authority,omitempty"`
	PaymentURL string `protobuf:"bytes,3,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
	RefID      int32  `protobuf:"varint,4,opt,name=RefID,proto3" json:"RefID,omitempty"`
	// id of the purchased product
	ProductID            int32    `protobuf:"varint,5,opt,name=ProductID,proto3" json:"ProductID,omitempty"`
	Paid                 int32    `protobuf:"varint,6,opt,name=Paid,proto3" json:"Paid,omitempty"`
	Price                int32    `protobuf:"varint,7,opt,name=Price,proto3" json:"Price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentRes) Reset()         { *m = PaymentRes{} }
func (m *PaymentRes) String() string { return proto.CompactTextString(m) }
func (*PaymentRes) ProtoMessage()    {}
func (*PaymentRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{33}
}
func (m *PaymentRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRes.Unmarshal(m, b)
}
func (m *PaymentRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRes.Marshal(b, m, deterministic)
}
func (dst *PaymentRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRes.Merge(dst, src)
}
func (m *PaymentRes) XXX_Size() int {
	return xxx_messageInfo_PaymentRes.Size(m)
}
func (m *PaymentRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRes.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRes proto.InternalMessageInfo

func (m *PaymentRes) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *PaymentRes) GetAuthority() int32 {
	if m != nil {
		return m.Authority
	}
	return 0
}

func (m *PaymentRes) GetPaymentURL() string {
	if m != nil {
		return m.PaymentURL
	}
	return ""
}

func (m *PaymentRes) GetRefID() int32 {
	if m != nil {
		return m.RefID
	}
	return 0
}

func (m *PaymentRes) GetProductID() int32 {
	if m != nil {
		return m.ProductID
	}
	return 0
}

func (m *PaymentRes) GetPaid() int32 {
	if m != nil {
		return m.Paid
	}
	return 0
}

func (m *PaymentRes) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type PlansRes struct {
	Plans                []*PlanRes `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PlansRes) Reset()         { *m = PlansRes{} }
func (m *PlansRes) String() string { return proto.CompactTextString(m) }
func (*PlansRes) ProtoMessage()    {}
func (*PlansRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{34}
}
func (m *PlansRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlansRes.Unmarshal(m, b)
}
func (m *PlansRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlansRes.Marshal(b, m, deterministic)
}
func (dst *PlansRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlansRes.Merge(dst, src)
}
func (m *PlansRes) XXX_Size() int {
	return xxx_messageInfo_PlansRes.Size(m)
}
func (m *PlansRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PlansRes.DiscardUnknown(m)
}

var xxx_messageInfo_PlansRes proto.InternalMessageInfo

func (m *PlansRes) GetPlans() []*PlanRes {
	if m != nil {
		return m.Plans
	}
	return nil
}

// Article messages
type Keyword struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Keyword) Reset()         { *m = Keyword{} }
func (m *Keyword) String() string { return proto.CompactTextString(m) }
func (*Keyword) ProtoMessage()    {}
func (*Keyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{35}
}
func (m *Keyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyword.Unmarshal(m, b)
}
func (m *Keyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyword.Marshal(b, m, deterministic)
}
func (dst *Keyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyword.Merge(dst, src)
}
func (m *Keyword) XXX_Size() int {
	return xxx_messageInfo_Keyword.Size(m)
}
func (m *Keyword) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyword.DiscardUnknown(m)
}

var xxx_messageInfo_Keyword proto.InternalMessageInfo

func (m *Keyword) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Article struct {
	ThumbnailUrl string `protobuf:"bytes,1,opt,name=ThumbnailUrl,proto3" json:"ThumbnailUrl,omitempty"`
	CoverUrl     string `protobuf:"bytes,2,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	Title        string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Body         string `protobuf:"bytes,4,opt,name=Body,proto3" json:"Body,omitempty"`
	// repeated Keyword Keywords = 5;
	Id                   string   `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	ShareUrl             string   `protobuf:"bytes,6,opt,name=ShareUrl,proto3" json:"ShareUrl,omitempty"`
	CreatedAt            uint64   `protobuf:"varint,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	Author               string   `protobuf:"bytes,8,opt,name=Author,proto3" json:"Author,omitempty"`
	Sum                  string   `protobuf:"bytes,9,opt,name=Sum,proto3" json:"Sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{36}
}
func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (dst *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(dst, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *Article) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Article) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Article) GetShareUrl() string {
	if m != nil {
		return m.ShareUrl
	}
	return ""
}

func (m *Article) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Article) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Article) GetSum() string {
	if m != nil {
		return m.Sum
	}
	return ""
}

type ListArticleRes struct {
	Articles             []*Article `protobuf:"bytes,1,rep,name=Articles,proto3" json:"Articles,omitempty"`
	TotalCount           int32      `protobuf:"varint,2,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListArticleRes) Reset()         { *m = ListArticleRes{} }
func (m *ListArticleRes) String() string { return proto.CompactTextString(m) }
func (*ListArticleRes) ProtoMessage()    {}
func (*ListArticleRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{37}
}
func (m *ListArticleRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArticleRes.Unmarshal(m, b)
}
func (m *ListArticleRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArticleRes.Marshal(b, m, deterministic)
}
func (dst *ListArticleRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArticleRes.Merge(dst, src)
}
func (m *ListArticleRes) XXX_Size() int {
	return xxx_messageInfo_ListArticleRes.Size(m)
}
func (m *ListArticleRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArticleRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListArticleRes proto.InternalMessageInfo

func (m *ListArticleRes) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

func (m *ListArticleRes) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

// Genral messages  //////////////////////////////////////////////////////////////////
// TODO: We need this later for uploads
type Chunk struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=Chunk,proto3" json:"Chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{38}
}
func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (dst *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(dst, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

// TODO:  We need this later too
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{39}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// ID for select
type ClassInfoReq struct {
	// string name = 1;
	Id                   uint32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClassInfoReq) Reset()         { *m = ClassInfoReq{} }
func (m *ClassInfoReq) String() string { return proto.CompactTextString(m) }
func (*ClassInfoReq) ProtoMessage()    {}
func (*ClassInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{40}
}
func (m *ClassInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClassInfoReq.Unmarshal(m, b)
}
func (m *ClassInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClassInfoReq.Marshal(b, m, deterministic)
}
func (dst *ClassInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassInfoReq.Merge(dst, src)
}
func (m *ClassInfoReq) XXX_Size() int {
	return xxx_messageInfo_ClassInfoReq.Size(m)
}
func (m *ClassInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClassInfoReq proto.InternalMessageInfo

func (m *ClassInfoReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Listing messages
type ListReq struct {
	Page                 uint32   `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{41}
}
func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (dst *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(dst, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ListStatusRes struct {
	Names                []string `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
	Page                 uint32   `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStatusRes) Reset()         { *m = ListStatusRes{} }
func (m *ListStatusRes) String() string { return proto.CompactTextString(m) }
func (*ListStatusRes) ProtoMessage()    {}
func (*ListStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{42}
}
func (m *ListStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStatusRes.Unmarshal(m, b)
}
func (m *ListStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStatusRes.Marshal(b, m, deterministic)
}
func (dst *ListStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStatusRes.Merge(dst, src)
}
func (m *ListStatusRes) XXX_Size() int {
	return xxx_messageInfo_ListStatusRes.Size(m)
}
func (m *ListStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListStatusRes proto.InternalMessageInfo

func (m *ListStatusRes) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ListStatusRes) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type FindByIdAndPage struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Page                 uint32   `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIdAndPage) Reset()         { *m = FindByIdAndPage{} }
func (m *FindByIdAndPage) String() string { return proto.CompactTextString(m) }
func (*FindByIdAndPage) ProtoMessage()    {}
func (*FindByIdAndPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_mefit_6766d6c0e636ee3f, []int{43}
}
func (m *FindByIdAndPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIdAndPage.Unmarshal(m, b)
}
func (m *FindByIdAndPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIdAndPage.Marshal(b, m, deterministic)
}
func (dst *FindByIdAndPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIdAndPage.Merge(dst, src)
}
func (m *FindByIdAndPage) XXX_Size() int {
	return xxx_messageInfo_FindByIdAndPage.Size(m)
}
func (m *FindByIdAndPage) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIdAndPage.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIdAndPage proto.InternalMessageInfo

func (m *FindByIdAndPage) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindByIdAndPage) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "Timestamp")
	proto.RegisterType((*AnonyReq)(nil), "AnonyReq")
	proto.RegisterType((*AnonyRes)(nil), "AnonyRes")
	proto.RegisterType((*AuthReq)(nil), "AuthReq")
	proto.RegisterType((*SignUpReq)(nil), "SignUpReq")
	proto.RegisterType((*EmailReq)(nil), "EmailReq")
	proto.RegisterType((*SignInRes)(nil), "SignInRes")
	proto.RegisterType((*LogoutReq)(nil), "LogoutReq")
	proto.RegisterType((*Profile)(nil), "Profile")
	proto.RegisterType((*Movement)(nil), "Movement")
	proto.RegisterType((*MuscleGroup)(nil), "MuscleGroup")
	proto.RegisterType((*Class)(nil), "Class")
	proto.RegisterType((*ListClassRes)(nil), "ListClassRes")
	proto.RegisterType((*FindByIdReq)(nil), "FindByIdReq")
	proto.RegisterType((*FindByMongoIdReq)(nil), "FindByMongoIdReq")
	proto.RegisterType((*FeedbackReq)(nil), "FeedbackReq")
	proto.RegisterType((*ListMovementsRes)(nil), "ListMovementsRes")
	proto.RegisterType((*ExerciseSection)(nil), "ExerciseSection")
	proto.RegisterType((*ExercisePeriod)(nil), "ExercisePeriod")
	proto.RegisterType((*CurrentPlanRes)(nil), "CurrentPlanRes")
	proto.RegisterType((*Workout)(nil), "Workout")
	proto.RegisterType((*WorkoutList)(nil), "WorkoutList")
	proto.RegisterType((*JoinPlanReq)(nil), "JoinPlanReq")
	proto.RegisterType((*JoinPlanRes)(nil), "JoinPlanRes")
	proto.RegisterType((*PlanRes)(nil), "PlanRes")
	proto.RegisterType((*PayReq)(nil), "PayReq")
	proto.RegisterType((*ZarinPayload)(nil), "ZarinPayload")
	proto.RegisterType((*BazaarPayload)(nil), "BazaarPayload")
	proto.RegisterType((*PayRes)(nil), "PayRes")
	proto.RegisterType((*Product)(nil), "Product")
	proto.RegisterType((*ProductRes)(nil), "ProductRes")
	proto.RegisterType((*BazaarReq)(nil), "BazaarReq")
	proto.RegisterType((*BazaarRes)(nil), "BazaarRes")
	proto.RegisterType((*PaymentRes)(nil), "PaymentRes")
	proto.RegisterType((*PlansRes)(nil), "PlansRes")
	proto.RegisterType((*Keyword)(nil), "Keyword")
	proto.RegisterType((*Article)(nil), "Article")
	proto.RegisterType((*ListArticleRes)(nil), "ListArticleRes")
	proto.RegisterType((*Chunk)(nil), "Chunk")
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*ClassInfoReq)(nil), "ClassInfoReq")
	proto.RegisterType((*ListReq)(nil), "ListReq")
	proto.RegisterType((*ListStatusRes)(nil), "ListStatusRes")
	proto.RegisterType((*FindByIdAndPage)(nil), "FindByIdAndPage")
	proto.RegisterEnum("State", State_name, State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MefitClient is the client API for Mefit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MefitClient interface {
	// Authentication
	AnonySignUp(ctx context.Context, in *AnonyReq, opts ...grpc.CallOption) (*AnonyRes, error)
	SignUp(ctx context.Context, in *SignUpReq, opts ...grpc.CallOption) (*Empty, error)
	SignIn(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*SignInRes, error)
	ResetPassword(ctx context.Context, in *EmailReq, opts ...grpc.CallOption) (*Empty, error)
	Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	// Profile
	ProfileUpdate(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Profile, error)
	ProfileInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Profile, error)
	// Program
	GetPlans(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PlansRes, error)
	// Plan
	GetPlan(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*PlanRes, error)
	GetCurrentPlan(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CurrentPlanRes, error)
	JoinPlan(ctx context.Context, in *JoinPlanReq, opts ...grpc.CallOption) (*JoinPlanRes, error)
	// Workout
	GetWorkout(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*Workout, error)
	GetPromotedWorkouts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WorkoutList, error)
	FinishWorkout(ctx context.Context, in *FeedbackReq, opts ...grpc.CallOption) (*Empty, error)
	// Class
	GetClasses(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListClassRes, error)
	GetClassMovements(ctx context.Context, in *FindByIdAndPage, opts ...grpc.CallOption) (*ListMovementsRes, error)
	ClassMovementInfo(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*Movement, error)
	// Article
	GetArticles(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListArticleRes, error)
	ArticleInfo(ctx context.Context, in *FindByMongoIdReq, opts ...grpc.CallOption) (*Article, error)
	// Payment
	GetProducts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductRes, error)
	PaymentRequest(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayRes, error)
	PaymentCheck(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*PaymentRes, error)
	BazaarPaymentCheck(ctx context.Context, in *BazaarReq, opts ...grpc.CallOption) (*BazaarRes, error)
}

type mefitClient struct {
	cc *grpc.ClientConn
}

func NewMefitClient(cc *grpc.ClientConn) MefitClient {
	return &mefitClient{cc}
}

func (c *mefitClient) AnonySignUp(ctx context.Context, in *AnonyReq, opts ...grpc.CallOption) (*AnonyRes, error) {
	out := new(AnonyRes)
	err := c.cc.Invoke(ctx, "/Mefit/AnonySignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) SignUp(ctx context.Context, in *SignUpReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Mefit/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) SignIn(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*SignInRes, error) {
	out := new(SignInRes)
	err := c.cc.Invoke(ctx, "/Mefit/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) ResetPassword(ctx context.Context, in *EmailReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Mefit/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Mefit/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) ProfileUpdate(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/Mefit/ProfileUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) ProfileInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/Mefit/ProfileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetPlans(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PlansRes, error) {
	out := new(PlansRes)
	err := c.cc.Invoke(ctx, "/Mefit/GetPlans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetPlan(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*PlanRes, error) {
	out := new(PlanRes)
	err := c.cc.Invoke(ctx, "/Mefit/GetPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetCurrentPlan(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CurrentPlanRes, error) {
	out := new(CurrentPlanRes)
	err := c.cc.Invoke(ctx, "/Mefit/GetCurrentPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) JoinPlan(ctx context.Context, in *JoinPlanReq, opts ...grpc.CallOption) (*JoinPlanRes, error) {
	out := new(JoinPlanRes)
	err := c.cc.Invoke(ctx, "/Mefit/JoinPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetWorkout(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*Workout, error) {
	out := new(Workout)
	err := c.cc.Invoke(ctx, "/Mefit/GetWorkout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetPromotedWorkouts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WorkoutList, error) {
	out := new(WorkoutList)
	err := c.cc.Invoke(ctx, "/Mefit/GetPromotedWorkouts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) FinishWorkout(ctx context.Context, in *FeedbackReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Mefit/FinishWorkout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetClasses(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListClassRes, error) {
	out := new(ListClassRes)
	err := c.cc.Invoke(ctx, "/Mefit/GetClasses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetClassMovements(ctx context.Context, in *FindByIdAndPage, opts ...grpc.CallOption) (*ListMovementsRes, error) {
	out := new(ListMovementsRes)
	err := c.cc.Invoke(ctx, "/Mefit/GetClassMovements", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) ClassMovementInfo(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*Movement, error) {
	out := new(Movement)
	err := c.cc.Invoke(ctx, "/Mefit/ClassMovementInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetArticles(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListArticleRes, error) {
	out := new(ListArticleRes)
	err := c.cc.Invoke(ctx, "/Mefit/GetArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) ArticleInfo(ctx context.Context, in *FindByMongoIdReq, opts ...grpc.CallOption) (*Article, error) {
	out := new(Article)
	err := c.cc.Invoke(ctx, "/Mefit/ArticleInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) GetProducts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductRes, error) {
	out := new(ProductRes)
	err := c.cc.Invoke(ctx, "/Mefit/GetProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) PaymentRequest(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayRes, error) {
	out := new(PayRes)
	err := c.cc.Invoke(ctx, "/Mefit/PaymentRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) PaymentCheck(ctx context.Context, in *FindByIdReq, opts ...grpc.CallOption) (*PaymentRes, error) {
	out := new(PaymentRes)
	err := c.cc.Invoke(ctx, "/Mefit/PaymentCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mefitClient) BazaarPaymentCheck(ctx context.Context, in *BazaarReq, opts ...grpc.CallOption) (*BazaarRes, error) {
	out := new(BazaarRes)
	err := c.cc.Invoke(ctx, "/Mefit/BazaarPaymentCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MefitServer is the server API for Mefit service.
type MefitServer interface {
	// Authentication
	AnonySignUp(context.Context, *AnonyReq) (*AnonyRes, error)
	SignUp(context.Context, *SignUpReq) (*Empty, error)
	SignIn(context.Context, *AuthReq) (*SignInRes, error)
	ResetPassword(context.Context, *EmailReq) (*Empty, error)
	Logout(context.Context, *Empty) (*Empty, error)
	// Profile
	ProfileUpdate(context.Context, *Profile) (*Profile, error)
	ProfileInfo(context.Context, *Empty) (*Profile, error)
	// Program
	GetPlans(context.Context, *Empty) (*PlansRes, error)
	// Plan
	GetPlan(context.Context, *FindByIdReq) (*PlanRes, error)
	GetCurrentPlan(context.Context, *Empty) (*CurrentPlanRes, error)
	JoinPlan(context.Context, *JoinPlanReq) (*JoinPlanRes, error)
	// Workout
	GetWorkout(context.Context, *FindByIdReq) (*Workout, error)
	GetPromotedWorkouts(context.Context, *Empty) (*WorkoutList, error)
	FinishWorkout(context.Context, *FeedbackReq) (*Empty, error)
	// Class
	GetClasses(context.Context, *Empty) (*ListClassRes, error)
	GetClassMovements(context.Context, *FindByIdAndPage) (*ListMovementsRes, error)
	ClassMovementInfo(context.Context, *FindByIdReq) (*Movement, error)
	// Article
	GetArticles(context.Context, *ListReq) (*ListArticleRes, error)
	ArticleInfo(context.Context, *FindByMongoIdReq) (*Article, error)
	// Payment
	GetProducts(context.Context, *Empty) (*ProductRes, error)
	PaymentRequest(context.Context, *PayReq) (*PayRes, error)
	PaymentCheck(context.Context, *FindByIdReq) (*PaymentRes, error)
	BazaarPaymentCheck(context.Context, *BazaarReq) (*BazaarRes, error)
}

func RegisterMefitServer(s *grpc.Server, srv MefitServer) {
	s.RegisterService(&_Mefit_serviceDesc, srv)
}

func _Mefit_AnonySignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnonyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).AnonySignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/AnonySignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).AnonySignUp(ctx, req.(*AnonyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).SignUp(ctx, req.(*SignUpReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).SignIn(ctx, req.(*AuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).ResetPassword(ctx, req.(*EmailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).Logout(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_ProfileUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).ProfileUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/ProfileUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).ProfileUpdate(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_ProfileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).ProfileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/ProfileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).ProfileInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetPlans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetPlans(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetPlan(ctx, req.(*FindByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetCurrentPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetCurrentPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetCurrentPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetCurrentPlan(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_JoinPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).JoinPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/JoinPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).JoinPlan(ctx, req.(*JoinPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetWorkout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetWorkout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetWorkout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetWorkout(ctx, req.(*FindByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetPromotedWorkouts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetPromotedWorkouts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetPromotedWorkouts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetPromotedWorkouts(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_FinishWorkout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedbackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).FinishWorkout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/FinishWorkout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).FinishWorkout(ctx, req.(*FeedbackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetClasses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetClasses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetClasses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetClasses(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetClassMovements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdAndPage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetClassMovements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetClassMovements",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetClassMovements(ctx, req.(*FindByIdAndPage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_ClassMovementInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).ClassMovementInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/ClassMovementInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).ClassMovementInfo(ctx, req.(*FindByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetArticles(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_ArticleInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByMongoIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).ArticleInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/ArticleInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).ArticleInfo(ctx, req.(*FindByMongoIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_GetProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).GetProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/GetProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).GetProducts(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_PaymentRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).PaymentRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/PaymentRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).PaymentRequest(ctx, req.(*PayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_PaymentCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).PaymentCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/PaymentCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).PaymentCheck(ctx, req.(*FindByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mefit_BazaarPaymentCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BazaarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MefitServer).BazaarPaymentCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mefit/BazaarPaymentCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MefitServer).BazaarPaymentCheck(ctx, req.(*BazaarReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mefit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Mefit",
	HandlerType: (*MefitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AnonySignUp",
			Handler:    _Mefit_AnonySignUp_Handler,
		},
		{
			MethodName: "SignUp",
			Handler:    _Mefit_SignUp_Handler,
		},
		{
			MethodName: "SignIn",
			Handler:    _Mefit_SignIn_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _Mefit_ResetPassword_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Mefit_Logout_Handler,
		},
		{
			MethodName: "ProfileUpdate",
			Handler:    _Mefit_ProfileUpdate_Handler,
		},
		{
			MethodName: "ProfileInfo",
			Handler:    _Mefit_ProfileInfo_Handler,
		},
		{
			MethodName: "GetPlans",
			Handler:    _Mefit_GetPlans_Handler,
		},
		{
			MethodName: "GetPlan",
			Handler:    _Mefit_GetPlan_Handler,
		},
		{
			MethodName: "GetCurrentPlan",
			Handler:    _Mefit_GetCurrentPlan_Handler,
		},
		{
			MethodName: "JoinPlan",
			Handler:    _Mefit_JoinPlan_Handler,
		},
		{
			MethodName: "GetWorkout",
			Handler:    _Mefit_GetWorkout_Handler,
		},
		{
			MethodName: "GetPromotedWorkouts",
			Handler:    _Mefit_GetPromotedWorkouts_Handler,
		},
		{
			MethodName: "FinishWorkout",
			Handler:    _Mefit_FinishWorkout_Handler,
		},
		{
			MethodName: "GetClasses",
			Handler:    _Mefit_GetClasses_Handler,
		},
		{
			MethodName: "GetClassMovements",
			Handler:    _Mefit_GetClassMovements_Handler,
		},
		{
			MethodName: "ClassMovementInfo",
			Handler:    _Mefit_ClassMovementInfo_Handler,
		},
		{
			MethodName: "GetArticles",
			Handler:    _Mefit_GetArticles_Handler,
		},
		{
			MethodName: "ArticleInfo",
			Handler:    _Mefit_ArticleInfo_Handler,
		},
		{
			MethodName: "GetProducts",
			Handler:    _Mefit_GetProducts_Handler,
		},
		{
			MethodName: "PaymentRequest",
			Handler:    _Mefit_PaymentRequest_Handler,
		},
		{
			MethodName: "PaymentCheck",
			Handler:    _Mefit_PaymentCheck_Handler,
		},
		{
			MethodName: "BazaarPaymentCheck",
			Handler:    _Mefit_BazaarPaymentCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mefit.proto",
}

func init() { proto.RegisterFile("mefit.proto", fileDescriptor_mefit_6766d6c0e636ee3f) }

var fileDescriptor_mefit_6766d6c0e636ee3f = []byte{
	// 2175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x18, 0xcb, 0x92, 0x1b, 0x49,
	0x51, 0xd2, 0x4c, 0x4b, 0xdd, 0x29, 0x69, 0x3c, 0x53, 0x38, 0x08, 0x85, 0x58, 0xcf, 0x8e, 0x0b,
	0x9b, 0x1d, 0xbc, 0xde, 0x0e, 0xc2, 0x04, 0x07, 0x76, 0xb9, 0xcc, 0xd3, 0x16, 0x7e, 0x89, 0x9a,
	0x19, 0x3b, 0x62, 0x2f, 0x44, 0x59, 0xaa, 0x91, 0x3a, 0xd4, 0xea, 0xee, 0xed, 0x6a, 0xcd, 0x20,
	0x3e, 0x87, 0x03, 0x7c, 0x04, 0x07, 0xe0, 0xcc, 0x2f, 0xc0, 0x89, 0x03, 0xbf, 0x41, 0x64, 0x3d,
	0x5a, 0xd5, 0x1a, 0x99, 0xdd, 0xf0, 0x2d, 0x33, 0x2b, 0xab, 0xb2, 0xf2, 0x9d, 0x55, 0xd0, 0x9e,
	0x8b, 0xeb, 0xa8, 0x08, 0xb3, 0x3c, 0x2d, 0x52, 0xfa, 0x0d, 0x04, 0x97, 0xd1, 0x5c, 0xc8, 0x82,
	0xcf, 0x33, 0xd2, 0x83, 0x96, 0x14, 0xa3, 0x34, 0x19, 0xcb, 0x5e, 0xfd, 0xa0, 0x7e, 0xb8, 0xc5,
	0x2c, 0x4a, 0xee, 0x83, 0x97, 0xf0, 0x24, 0x95, 0xbd, 0xc6, 0x41, 0xfd, 0xd0, 0x63, 0x1a, 0xa1,
	0x8f, 0xc0, 0x3f, 0x4a, 0xd2, 0x64, 0xc9, 0xc4, 0x77, 0xb8, 0x97, 0x23, 0x3c, 0x18, 0xab, 0xbd,
	0x01, 0xb3, 0x28, 0xfd, 0xba, 0xe4, 0x92, 0x1f, 0xe7, 0x42, 0x09, 0x45, 0x3a, 0x13, 0x89, 0x92,
	0x10, 0x30, 0x8d, 0xd0, 0x6f, 0xa0, 0x75, 0xb4, 0x28, 0xa6, 0x28, 0xe0, 0x3e, 0x78, 0x62, 0xce,
	0xa3, 0xd8, 0x6c, 0xd4, 0x08, 0xe9, 0x83, 0x9f, 0x71, 0x29, 0x6f, 0xd3, 0x7c, 0x6c, 0x76, 0x96,
	0x38, 0x7d, 0x0f, 0xc1, 0x45, 0x34, 0x49, 0xae, 0xb2, 0x4f, 0xda, 0xee, 0xde, 0x75, 0xab, 0xaa,
	0xd1, 0x01, 0xf8, 0x67, 0xb8, 0xfd, 0xa3, 0xe7, 0xd2, 0x87, 0x5a, 0xf4, 0x20, 0x41, 0xa5, 0x4b,
	0xd5, 0xea, 0xae, 0x6a, 0x0f, 0x21, 0x78, 0x95, 0x4e, 0xd2, 0x45, 0x61, 0x4e, 0xd9, 0xc0, 0xf2,
	0x9f, 0x06, 0xb4, 0x86, 0x79, 0x7a, 0x1d, 0xc5, 0x82, 0x10, 0xd8, 0x4e, 0xf8, 0x5c, 0x18, 0x06,
	0x05, 0x93, 0x1f, 0x43, 0x73, 0x22, 0x92, 0xb1, 0xc8, 0xd5, 0xdd, 0xbb, 0xcc, 0x60, 0x64, 0x17,
	0xb6, 0xf8, 0x44, 0xa8, 0x5b, 0x77, 0x19, 0x82, 0xc8, 0x39, 0x15, 0xd1, 0x64, 0x5a, 0xf4, 0xb6,
	0x35, 0xa7, 0xc6, 0x50, 0xee, 0x2d, 0x8f, 0x64, 0xd1, 0xf3, 0x14, 0x59, 0x23, 0x4a, 0x96, 0x18,
	0xcd, 0x7a, 0x4d, 0x45, 0x54, 0x30, 0x9e, 0x39, 0x8d, 0xb2, 0x5e, 0x4b, 0x9f, 0x39, 0x8d, 0x32,
	0x25, 0x25, 0x9f, 0xf7, 0x7c, 0x23, 0x25, 0x9f, 0x23, 0x25, 0x16, 0x93, 0x5e, 0xa0, 0x29, 0xb1,
	0x98, 0x90, 0x47, 0xd0, 0x1d, 0x2d, 0xf2, 0x5c, 0x24, 0xc5, 0x7b, 0x2d, 0x1e, 0x0e, 0xea, 0x87,
	0x0d, 0x56, 0x25, 0x12, 0x0a, 0x9d, 0x82, 0xe7, 0x13, 0x61, 0x99, 0xda, 0x8a, 0xa9, 0x42, 0xc3,
	0x93, 0xf8, 0xa8, 0x88, 0x6e, 0xa2, 0x62, 0xf9, 0x4a, 0xdc, 0x88, 0xb8, 0xd7, 0x51, 0x52, 0xaa,
	0x44, 0xb2, 0x0f, 0x30, 0xe6, 0x4b, 0xf9, 0xf6, 0xfa, 0xbd, 0x10, 0xb3, 0x5e, 0xf7, 0x60, 0xeb,
	0xb0, 0xcb, 0x1c, 0x0a, 0x6a, 0x36, 0x49, 0x79, 0xdc, 0xdb, 0xd1, 0x9a, 0x21, 0x4c, 0xff, 0xd5,
	0x00, 0xff, 0x75, 0x7a, 0x23, 0xe6, 0x22, 0x51, 0xaa, 0xbf, 0x71, 0xcc, 0x8c, 0x30, 0x5e, 0xef,
	0x72, 0xba, 0x98, 0x7f, 0x48, 0x78, 0x14, 0x5f, 0xe5, 0xb1, 0x09, 0x94, 0x0a, 0x8d, 0xfc, 0x02,
	0x3a, 0xaf, 0x17, 0x72, 0x14, 0x8b, 0xe7, 0x79, 0xba, 0xc8, 0x64, 0x6f, 0xeb, 0x60, 0xeb, 0xb0,
	0xfd, 0xac, 0x13, 0x3a, 0x44, 0x56, 0xe1, 0x20, 0x07, 0xd0, 0x3e, 0x15, 0x72, 0x94, 0x47, 0x59,
	0x11, 0xa5, 0x89, 0xf2, 0x4b, 0xc0, 0x5c, 0x12, 0x72, 0x0c, 0x12, 0x59, 0xe4, 0x8b, 0x91, 0xe2,
	0xf0, 0x34, 0x87, 0x43, 0xc2, 0xf0, 0x7d, 0x17, 0x8d, 0x45, 0x8a, 0xb7, 0x6a, 0xea, 0xf0, 0xb5,
	0x38, 0x6a, 0x72, 0x19, 0x65, 0x52, 0x79, 0x2c, 0x60, 0x0a, 0x26, 0x98, 0xb0, 0x79, 0x11, 0x8d,
	0x62, 0x21, 0x7b, 0xbe, 0xba, 0xa1, 0x1f, 0x1a, 0x02, 0x2b, 0x57, 0x90, 0xeb, 0xa5, 0x58, 0x62,
	0x0e, 0xc8, 0x5e, 0x60, 0xb8, 0x0c, 0x81, 0x95, 0x2b, 0x64, 0x07, 0x1a, 0x83, 0xb1, 0xf2, 0x67,
	0x97, 0x35, 0x06, 0x63, 0x0c, 0x31, 0x0c, 0xca, 0x73, 0xae, 0xdc, 0x17, 0x30, 0x83, 0xd1, 0x87,
	0xd0, 0x76, 0xf4, 0xde, 0x64, 0x60, 0xfa, 0x8f, 0x3a, 0x78, 0x27, 0x31, 0x97, 0x72, 0xa3, 0xf9,
	0xfb, 0xe0, 0x9f, 0xa4, 0x37, 0x22, 0x5f, 0x99, 0xbe, 0xc4, 0xd7, 0x8d, 0xb8, 0x75, 0xd7, 0x88,
	0xae, 0x32, 0xdb, 0x1f, 0x55, 0x66, 0xdd, 0x7d, 0xde, 0xf7, 0xba, 0x4f, 0xab, 0xdf, 0xb4, 0xea,
	0xd3, 0x53, 0xe8, 0xbc, 0x8a, 0x64, 0xa1, 0xd4, 0xc0, 0xa4, 0x3f, 0x80, 0x96, 0x82, 0x05, 0xd6,
	0x52, 0x3c, 0xac, 0x19, 0xea, 0x35, 0x4b, 0x46, 0x5d, 0x87, 0x98, 0xa6, 0x3a, 0x77, 0x15, 0x4c,
	0x1f, 0x40, 0xfb, 0x3c, 0x4a, 0xc6, 0xc7, 0xcb, 0xc1, 0x18, 0xcb, 0x82, 0x16, 0x52, 0x2f, 0x85,
	0x50, 0xd8, 0xd5, 0xcb, 0xaf, 0xd3, 0x64, 0x92, 0xae, 0xf3, 0x04, 0x8a, 0xe7, 0x77, 0xd0, 0x3e,
	0x17, 0x62, 0xfc, 0x81, 0x8f, 0x66, 0x1b, 0x8e, 0x40, 0xa9, 0x39, 0x2f, 0x4a, 0xa9, 0x08, 0xab,
	0xac, 0x89, 0xae, 0xaf, 0xa3, 0xd1, 0x22, 0x2e, 0x96, 0xa6, 0x6c, 0x38, 0x14, 0x9a, 0xc2, 0x2e,
	0xea, 0x66, 0x93, 0x44, 0xe9, 0xf7, 0x05, 0x04, 0x25, 0x6e, 0x34, 0x0c, 0x42, 0x4b, 0x61, 0xab,
	0xb5, 0x4d, 0x6a, 0xa2, 0xc0, 0xcb, 0xb4, 0xe0, 0xf1, 0x49, 0xba, 0x48, 0x0a, 0x25, 0xd0, 0x63,
	0x0e, 0x85, 0xbe, 0x83, 0x7b, 0x67, 0x7f, 0x10, 0xf9, 0x28, 0x92, 0xe2, 0x42, 0xe8, 0x50, 0xff,
	0x0a, 0x02, 0x4b, 0xb2, 0xf2, 0xee, 0x85, 0x96, 0x32, 0x14, 0x79, 0x94, 0x8e, 0xd9, 0x8a, 0x03,
	0x0b, 0x1b, 0x4b, 0x17, 0xc9, 0xd8, 0x88, 0xd5, 0x08, 0xfd, 0x77, 0x1d, 0x76, 0xaa, 0x7b, 0x3e,
	0x39, 0xe1, 0xf7, 0x01, 0xac, 0x8e, 0xa6, 0x41, 0x74, 0x99, 0x43, 0x21, 0x8f, 0x57, 0x45, 0x45,
	0xe5, 0x76, 0xc5, 0x3c, 0xab, 0x7a, 0x43, 0xa1, 0x63, 0x2f, 0x74, 0xb9, 0xcc, 0x84, 0xa9, 0xc3,
	0x15, 0x1a, 0xea, 0xf2, 0x8e, 0xc7, 0x0b, 0x61, 0xa2, 0x4d, 0x23, 0x78, 0x71, 0x26, 0x64, 0xa1,
	0xf2, 0xdb, 0x63, 0x0a, 0xa6, 0x7f, 0xae, 0xc3, 0xce, 0x89, 0x2e, 0xad, 0xc3, 0x98, 0xab, 0xe6,
	0x43, 0xa1, 0x75, 0x9b, 0xe6, 0xb3, 0x74, 0x51, 0x28, 0x15, 0x31, 0xfc, 0xdf, 0x6b, 0x9c, 0xd9,
	0x05, 0xf2, 0x19, 0x6c, 0x67, 0x31, 0xd7, 0xad, 0x17, 0x19, 0xcc, 0x5e, 0xa6, 0xa8, 0x58, 0x79,
	0x0b, 0x74, 0x8d, 0xd9, 0x26, 0x8d, 0xb2, 0x55, 0x22, 0x79, 0x0a, 0x7b, 0xa3, 0x74, 0x9e, 0xc5,
	0xa2, 0x10, 0xe3, 0x92, 0x53, 0x37, 0x9b, 0xbb, 0x0b, 0xf4, 0x6f, 0x0d, 0x68, 0x19, 0x64, 0x53,
	0x84, 0x2a, 0x8f, 0x34, 0x1c, 0x8f, 0x7c, 0x7f, 0x9e, 0xaf, 0x15, 0xcb, 0xed, 0xbb, 0xc5, 0xb2,
	0x07, 0xad, 0x13, 0x1e, 0xa7, 0x79, 0x64, 0xad, 0x6c, 0x51, 0xac, 0x30, 0xa7, 0x8b, 0x9c, 0xab,
	0x8d, 0xda, 0xc6, 0x25, 0x4e, 0x7e, 0x03, 0xbb, 0xa2, 0x1a, 0x8a, 0x58, 0x52, 0x31, 0xfc, 0x76,
	0xc3, 0xb5, 0x18, 0x65, 0x77, 0x38, 0x51, 0xe6, 0x4d, 0x94, 0xc5, 0xe9, 0x68, 0xa6, 0xfa, 0xa4,
	0xcf, 0x2c, 0x7a, 0x27, 0xc6, 0x82, 0x0d, 0x31, 0xe6, 0x56, 0x3e, 0xa8, 0x56, 0x3e, 0x2a, 0xa1,
	0x6d, 0x0c, 0x88, 0xa9, 0xa9, 0x06, 0x88, 0xa8, 0x88, 0x45, 0x39, 0x40, 0x20, 0x82, 0xc5, 0xef,
	0xd6, 0xfa, 0xa2, 0x61, 0x8a, 0x9f, 0xf5, 0x7e, 0xb9, 0x82, 0x7b, 0x47, 0x4e, 0x22, 0x6a, 0x04,
	0xdd, 0x90, 0x61, 0xde, 0x6e, 0xeb, 0xf8, 0xca, 0x4c, 0x79, 0xfa, 0x6d, 0x1a, 0x25, 0x3a, 0x3e,
	0xee, 0x96, 0xa7, 0x2f, 0xdd, 0x65, 0x49, 0x3e, 0x03, 0x4f, 0x16, 0x58, 0x6b, 0x90, 0x63, 0xe7,
	0x59, 0x33, 0xbc, 0x40, 0x8c, 0x69, 0x22, 0xfd, 0x2b, 0x0e, 0x37, 0x65, 0x90, 0x56, 0x8d, 0x51,
	0xdf, 0x60, 0x8c, 0x4f, 0x0b, 0x0b, 0x7d, 0xc5, 0xed, 0x32, 0xb8, 0x1e, 0x41, 0xd7, 0x18, 0x40,
	0x55, 0x1a, 0x69, 0x42, 0xa1, 0x4a, 0x44, 0x8b, 0xe0, 0xb8, 0x20, 0x6d, 0xc6, 0x29, 0x04, 0xa9,
	0x7a, 0xf4, 0xd0, 0x43, 0x90, 0x46, 0xd0, 0xc5, 0xef, 0xa2, 0xec, 0x95, 0xe3, 0x62, 0x83, 0xa2,
	0xfb, 0x5e, 0x70, 0x79, 0x99, 0x47, 0x5c, 0xbb, 0xd7, 0x67, 0x25, 0xae, 0x34, 0x56, 0xf5, 0xce,
	0x44, 0xa4, 0xee, 0xa3, 0x15, 0x5a, 0xc5, 0xfd, 0xed, 0x35, 0xf7, 0x1f, 0x43, 0x73, 0xc8, 0xd5,
	0xe0, 0xfd, 0x19, 0x04, 0xc3, 0x3c, 0x1d, 0x2f, 0x46, 0xc5, 0xe0, 0x54, 0x19, 0xce, 0x63, 0x2b,
	0x02, 0x9e, 0x31, 0x90, 0xc7, 0xfc, 0x8f, 0x9c, 0xeb, 0x21, 0xd1, 0x67, 0x25, 0x4e, 0xcf, 0xa1,
	0xf3, 0x2d, 0xcf, 0xa3, 0x64, 0xc8, 0x97, 0x71, 0xca, 0x95, 0x6d, 0x2e, 0x73, 0x9e, 0x48, 0xae,
	0x82, 0xd7, 0x78, 0xd6, 0x63, 0x55, 0x22, 0x0e, 0x79, 0x57, 0x79, 0x64, 0xdc, 0x80, 0x20, 0xbd,
	0x80, 0xae, 0x3e, 0xd1, 0x1e, 0xb4, 0x0b, 0x5b, 0xec, 0xe2, 0xc8, 0x78, 0x11, 0x41, 0xa4, 0x5c,
	0xbc, 0xbc, 0xb2, 0x9b, 0x2e, 0x5e, 0x5e, 0x61, 0xfd, 0x3c, 0x15, 0x37, 0x66, 0x87, 0xf1, 0x9c,
	0x43, 0xa1, 0xb7, 0x46, 0x41, 0x49, 0x1e, 0x83, 0xa7, 0xae, 0x69, 0xea, 0x57, 0x37, 0x74, 0x2f,
	0xfd, 0xa2, 0xc6, 0xf4, 0x2a, 0x39, 0x84, 0xa6, 0xa3, 0x67, 0xfb, 0xd9, 0x4e, 0x58, 0xb9, 0xd4,
	0x8b, 0x1a, 0x33, 0xeb, 0xe4, 0x3e, 0x76, 0xa4, 0x48, 0x0b, 0xf5, 0x5f, 0xd4, 0x98, 0xc2, 0x8e,
	0x9b, 0xb0, 0x5d, 0x2c, 0x33, 0x41, 0xff, 0x59, 0x57, 0x43, 0x37, 0xda, 0x4f, 0x45, 0x8f, 0x35,
	0x6a, 0x63, 0x70, 0xba, 0x31, 0x06, 0xef, 0x83, 0x37, 0xcc, 0xa3, 0x91, 0xb0, 0xd9, 0xa3, 0x90,
	0x1f, 0x30, 0xdd, 0xed, 0xc2, 0xd6, 0xdb, 0xeb, 0x6b, 0x15, 0x7f, 0x1e, 0x43, 0x50, 0xc5, 0x17,
	0xff, 0x20, 0xec, 0x28, 0xa7, 0x11, 0x3c, 0x29, 0x17, 0xa3, 0x74, 0x3e, 0xc7, 0xd9, 0x7e, 0xac,
	0x62, 0xcf, 0x67, 0x2e, 0xa9, 0x12, 0x27, 0xfe, 0x5a, 0x9c, 0x3c, 0x03, 0x30, 0xca, 0x30, 0x3d,
	0xd9, 0x19, 0xcc, 0xf6, 0x50, 0x3f, 0xb4, 0xcb, 0xe5, 0x0a, 0x9d, 0x41, 0xa0, 0x2d, 0x85, 0xe1,
	0x75, 0x00, 0xed, 0x21, 0x1f, 0xcd, 0xf8, 0x44, 0x38, 0x6d, 0xd2, 0x25, 0x55, 0x03, 0x50, 0x5b,
	0xc6, 0x09, 0xc0, 0x7d, 0x80, 0xe1, 0x22, 0x1f, 0x4d, 0xb9, 0x14, 0x83, 0x53, 0xeb, 0xe7, 0x15,
	0x85, 0x7e, 0xbe, 0x12, 0x66, 0x66, 0x85, 0x48, 0x07, 0x9e, 0xaf, 0xfd, 0x42, 0xff, 0x5e, 0x07,
	0x18, 0xf2, 0xa5, 0xea, 0x9b, 0x42, 0xe2, 0x98, 0x79, 0x25, 0x45, 0x5e, 0xba, 0xc5, 0x60, 0x78,
	0x0b, 0x7c, 0x29, 0xa6, 0x79, 0x54, 0x2c, 0xcd, 0x2b, 0x75, 0x45, 0x50, 0xb7, 0xd0, 0x67, 0x5c,
	0xb1, 0x57, 0xe5, 0x2d, 0x4a, 0x8a, 0x1a, 0x17, 0xc4, 0xf5, 0xe0, 0xd4, 0x54, 0x3b, 0x8d, 0x54,
	0x35, 0xf3, 0xd6, 0x53, 0xcb, 0x5e, 0xb6, 0xa9, 0x0b, 0x24, 0xc2, 0xab, 0x60, 0x68, 0x39, 0xc1,
	0x40, 0x9f, 0x80, 0x8f, 0x95, 0x4e, 0xcd, 0x4d, 0xfb, 0xe0, 0x61, 0x57, 0x75, 0xec, 0x6f, 0x9a,
	0xad, 0x26, 0xd3, 0x9f, 0x40, 0xcb, 0x4c, 0xa5, 0x18, 0x21, 0x2f, 0xc5, 0xd2, 0xa6, 0xd1, 0x4b,
	0xb1, 0xa4, 0xff, 0xad, 0x43, 0xcb, 0x8c, 0xe9, 0x3f, 0xa8, 0x66, 0xfe, 0xbf, 0xd1, 0xf9, 0x3e,
	0x78, 0x97, 0xaa, 0x63, 0x68, 0x6b, 0x68, 0x04, 0x95, 0x3a, 0x4e, 0xc7, 0x4b, 0x13, 0xb0, 0x0a,
	0x36, 0x35, 0xd4, 0xb3, 0x13, 0x26, 0x9e, 0x7a, 0x31, 0xe5, 0xb9, 0x70, 0x5e, 0x1d, 0x16, 0x47,
	0x93, 0x9d, 0xe4, 0x82, 0x17, 0x62, 0x7c, 0xa4, 0x47, 0x93, 0x6d, 0xb6, 0x22, 0xa0, 0xf3, 0xb4,
	0x4f, 0x4c, 0x9c, 0x1a, 0x4c, 0x95, 0x87, 0xc5, 0xdc, 0xf4, 0x40, 0x04, 0xe9, 0x3b, 0xd8, 0xc1,
	0xbe, 0x66, 0x1f, 0x27, 0xa2, 0xfa, 0x76, 0xa9, 0x7f, 0xf4, 0xed, 0x52, 0x9d, 0x2c, 0x1b, 0x77,
	0x26, 0xcb, 0x07, 0xe0, 0x9d, 0x4c, 0x17, 0xc9, 0x0c, 0xd5, 0x57, 0x80, 0xb2, 0x5b, 0x87, 0x69,
	0x84, 0xb6, 0xc0, 0x3b, 0x9b, 0x67, 0xc5, 0x92, 0xee, 0x43, 0x47, 0xcd, 0xe9, 0x83, 0xe4, 0x3a,
	0xdd, 0xd4, 0xea, 0x1e, 0x40, 0x0b, 0xef, 0x87, 0x4b, 0x76, 0xc0, 0xad, 0x3b, 0x73, 0xfc, 0xaf,
	0xa1, 0x8b, 0xcb, 0xd8, 0xf0, 0x16, 0xd2, 0xfc, 0x01, 0x60, 0xb2, 0xe8, 0xab, 0x07, 0x4c, 0x23,
	0x1b, 0x9f, 0x00, 0xbf, 0x82, 0x7b, 0xf6, 0x09, 0x70, 0x94, 0x8c, 0xd5, 0xb8, 0xbc, 0x61, 0x42,
	0x5a, 0xdf, 0xf6, 0xe4, 0x11, 0x78, 0xaa, 0xbd, 0x12, 0x1f, 0xb6, 0x4f, 0xdf, 0xbe, 0x39, 0xdb,
	0xad, 0x91, 0x3d, 0xe8, 0xbe, 0x39, 0x3b, 0x3b, 0xfd, 0xfd, 0xf0, 0x8a, 0x9d, 0xbc, 0x38, 0xba,
	0x38, 0xdb, 0xad, 0x3f, 0xfb, 0x4b, 0x0b, 0xbc, 0xd7, 0xe2, 0x3a, 0x2a, 0xc8, 0x63, 0x68, 0xab,
	0x5f, 0x19, 0xfd, 0x43, 0x42, 0x82, 0xd0, 0xfe, 0xe4, 0xf4, 0x4b, 0x50, 0xd2, 0x1a, 0xd9, 0x87,
	0xa6, 0xe1, 0x80, 0xb0, 0xfc, 0x4c, 0xe9, 0x37, 0x43, 0x6d, 0xa5, 0x1a, 0x39, 0xd0, 0xeb, 0x83,
	0x84, 0xf8, 0xa1, 0xf9, 0xa9, 0xe9, 0x6b, 0x4e, 0xf5, 0xf7, 0x41, 0x6b, 0xd8, 0x55, 0x98, 0x90,
	0xa2, 0x18, 0xda, 0x7f, 0x95, 0x20, 0xb4, 0x9f, 0x27, 0xce, 0x39, 0x7d, 0x68, 0xea, 0xdf, 0x10,
	0x62, 0x68, 0xce, 0xda, 0x63, 0xe8, 0x9a, 0x5f, 0x90, 0xab, 0x6c, 0xac, 0x54, 0x0c, 0x0d, 0xde,
	0x2f, 0x21, 0x5a, 0x23, 0x0f, 0xa1, 0x6d, 0x10, 0x74, 0x5a, 0x79, 0x8e, 0xcb, 0xf2, 0x39, 0xf8,
	0xcf, 0x85, 0x1a, 0x8d, 0x65, 0xb9, 0x1e, 0x84, 0x36, 0x37, 0x69, 0x8d, 0xfc, 0x14, 0x5a, 0x86,
	0x81, 0x74, 0x42, 0xe7, 0x25, 0xd6, 0x2f, 0xf3, 0x94, 0xd6, 0xc8, 0x97, 0xb0, 0xf3, 0x5c, 0x14,
	0xce, 0x9c, 0x5d, 0x9e, 0x75, 0x2f, 0xac, 0x4e, 0xdf, 0xb4, 0x46, 0x0e, 0xc1, 0xb7, 0x33, 0x11,
	0xe9, 0x84, 0xce, 0xf4, 0xd4, 0x77, 0x31, 0xe4, 0xfc, 0x19, 0xc0, 0x73, 0x51, 0xd8, 0xa9, 0x78,
	0x5d, 0xbc, 0xa1, 0xd3, 0x1a, 0xf9, 0x0a, 0x7e, 0x84, 0x77, 0xcc, 0xd3, 0x79, 0xea, 0x8c, 0xd4,
	0xe5, 0x1d, 0x3a, 0xa1, 0x33, 0x17, 0xd2, 0x1a, 0xf9, 0x02, 0xba, 0xe7, 0x51, 0x12, 0xc9, 0xa9,
	0x73, 0xf2, 0xea, 0x7d, 0x58, 0x31, 0x33, 0xca, 0xb7, 0xaf, 0x53, 0x7b, 0x5c, 0x37, 0x74, 0x9f,
	0xb5, 0xb4, 0x46, 0xbe, 0x86, 0x3d, 0xcb, 0xb6, 0x7a, 0xe4, 0xed, 0x86, 0x6b, 0x31, 0xdb, 0xdf,
	0x0b, 0xd7, 0x9f, 0x8c, 0xb4, 0x46, 0x42, 0xd8, 0xab, 0x6c, 0x54, 0x8e, 0xaa, 0x6a, 0xba, 0x7a,
	0x25, 0xd1, 0x1a, 0x79, 0x02, 0xed, 0xe7, 0xa2, 0x28, 0x93, 0xdb, 0x0f, 0x4d, 0xce, 0xf5, 0xef,
	0x85, 0xd5, 0xea, 0x40, 0x6b, 0xe4, 0x29, 0xb4, 0x0d, 0xae, 0x4e, 0xdd, 0x0b, 0xd7, 0x5f, 0xca,
	0xfd, 0xb2, 0x5e, 0xd0, 0x1a, 0xa1, 0xea, 0x64, 0xdb, 0xf2, 0x4a, 0x6d, 0xdb, 0xa1, 0xd3, 0x2d,
	0x29, 0xec, 0x94, 0x8d, 0xe7, 0xbb, 0x85, 0x90, 0x05, 0x69, 0x85, 0x7a, 0xe8, 0xea, 0x1b, 0x40,
	0x92, 0x9f, 0x43, 0xc7, 0xf0, 0x9c, 0x4c, 0xc5, 0x68, 0xb6, 0xa6, 0x4c, 0x3b, 0x74, 0x3a, 0xd7,
	0x53, 0x20, 0xe5, 0x44, 0xb2, 0xda, 0x00, 0x61, 0xd9, 0x6b, 0xfb, 0x2b, 0x58, 0x1e, 0x3f, 0x86,
	0x40, 0xff, 0xd3, 0xf2, 0x2c, 0x3a, 0xf6, 0x55, 0xce, 0x1e, 0x65, 0xd1, 0xb0, 0xfe, 0x6d, 0x53,
	0x24, 0x8b, 0x79, 0xf6, 0xe1, 0x4f, 0x8d, 0xad, 0xd7, 0xe7, 0x47, 0x1f, 0x9a, 0xea, 0x1b, 0xf7,
	0x97, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x68, 0x71, 0xa1, 0xb6, 0xd5, 0x15, 0x00, 0x00,
}
